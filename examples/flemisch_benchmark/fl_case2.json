{
    // @note I've noticed that the most efficient way to define a fracture that perfectly matches the limits existing in mesh is 
    // to have its corners slightly crossing the desired position, while setting Limit directive to "Etruncated".
    // E.g. that's why the corner coordinates of some of these fractures have a value like 1.01, when we actually want it to be 1.0.
    "$schema": "../dfn_schema.json",
    "Mesh": "examples/flemisch_benchmark/fl_case2.msh",
    "TolDist":  0.1,
	"Domains":
	{
		"Vol1" :
		{
			"K": 1.0e-9,
			"phi": 0.8
		},
		"vol2" :
		{
			"K": 1.0e-9,
			"phi": 0.8
		}
	},
	
    "Fractures": [
        {
            "Index": 0,
			"MatID": 20,
            "Limit": "Etruncated",
			"K" : 1.0e-9,
			"phi": 0.8,
            "Nodes": [
                [ 0.500,-0.010,-0.010],
                [ 0.500, 1.010,-0.010],
                [ 0.500, 1.010, 1.010],
                [ 0.500,-0.010, 1.010]
            ]
        },
        {
            "Index": 1,
			"MatID": 21,
            "Limit": "Etruncated",
            "Nodes": [
                [-0.010, 0.500,-0.010],
                [ 1.010, 0.500,-0.010],
                [ 1.010, 0.500, 1.010],
                [-0.010, 0.500, 1.010]
            ]
        },
        {
            "Index": 2,
			"MatID": 22,
            "Limit": "Etruncated",
            "Nodes": [
                [-0.010,-0.010, 0.500],
                [ 1.010,-0.010, 0.500],
                [ 1.010, 1.010, 0.500],
                [-0.010, 1.010, 0.500]
            ]
        },
        {
            "Index": 3,
			"MatID": 23,
            "Limit": "Etruncated",
            "Nodes": [
                [ 0.750, 0.490, 0.490],
                [ 0.750, 1.010, 0.490],
                [ 0.750, 1.010, 1.010],
                [ 0.750, 0.490, 1.010]
            ]
        },
        {
            "Index": 4,
			"MatID": 24,
            "Limit": "Etruncated",
            "Nodes": [
                [ 0.490, 0.750, 0.490],
                [ 1.010, 0.750, 0.490],
                [ 1.010, 0.750, 1.010],
                [ 0.490, 0.750, 1.010]
            ]
        },
        {
            "Index": 5,
			"MatID": 25,
            "Limit": "Etruncated",
            "Nodes": [
                [ 0.490, 0.490, 0.750],
                [ 1.010, 0.490, 0.750],
                [ 1.010, 1.010, 0.750],
                [ 0.490, 1.010, 0.750]
            ]
        },
        {
            "Index": 6,
			"MatID": 26,
            "Limit": "Etruncated",
            "Nodes": [
                [ 0.625, 0.490, 0.490],
                [ 0.625, 0.760, 0.490],
                [ 0.625, 0.760, 0.760],
                [ 0.625, 0.490, 0.760]
            ]
        },
        {
            "Index": 7,
			"MatID": 27,
            "Limit": "Etruncated",
            "Nodes": [
                [ 0.490, 0.625, 0.490],
                [ 0.760, 0.625, 0.490],
                [ 0.760, 0.625, 0.760],
                [ 0.490, 0.625, 0.760]
            ]
        },
        {
            "Index": 8,
			"MatID": 28,
            "Limit": "Etruncated",
            "Nodes": [
                [ 0.490, 0.490, 0.625],
                [ 0.760, 0.490, 0.625],
                [ 0.760, 0.760, 0.625],
                [ 0.490, 0.760, 0.625]
            ]
        }
    ]
}